onst Event = {\n  HIDE: `hide${EVENT_KEY}`,\n  HIDDEN: `hidden${EVENT_KEY}`,\n  SHOW: `show${EVENT_KEY}`,\n  SHOWN: `shown${EVENT_KEY}`,\n  INSERTED: `inserted${EVENT_KEY}`,\n  CLICK: `click${EVENT_KEY}`,\n  FOCUSIN: `focusin${EVENT_KEY}`,\n  FOCUSOUT: `focusout${EVENT_KEY}`,\n  MOUSEENTER: `mouseenter${EVENT_KEY}`,\n  MOUSELEAVE: `mouseleave${EVENT_KEY}`\n}\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Popover extends Tooltip {\n  // Getters\n\n  static get VERSION() {\n    return VERSION\n  }\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  static get DATA_KEY() {\n    return DATA_KEY\n  }\n\n  static get Event() {\n    return Event\n  }\n\n  static get EVENT_KEY() {\n    return EVENT_KEY\n  }\n\n  static get DefaultType() {\n    return DefaultType\n  }\n\n  // Overrides\n\n  isWithContent() {\n    return this.getTitle() || this._getContent()\n  }\n\n  addAttachmentClass(attachment) {\n    $(this.getTipElement()).addClass(`${CLASS_PREFIX}-${attachment}`)\n  }\n\n  getTipElement() {\n    this.tip = this.tip || $(this.config.template)[0]\n    return this.tip\n  }\n\n  setContent() {\n    const $tip = $(this.getTipElement())\n\n    // We use append for html objects to maintain js events\n    this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle())\n    let content = this._getContent()\n    if (typeof content === 'function') {\n      content = content.call(this.element)\n    }\n\n    this.setElementContent($tip.find(SELECTOR_CONTENT), content)\n\n    $tip.removeClass(`${CLASS_NAME_FADE} ${CLASS_NAME_SHOW}`)\n  }\n\n  // Private\n\n  _getContent() {\n    return this.element.getAttribute('data-content') ||\n      this.config.content\n  }\n\n  _cleanTipClass() {\n    const $tip = $(this.getTipElement())\n    const tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX)\n    if (tabClass !== null && tabClass.length > 0) {\n      $tip.removeClass(tabClass.join(''))\n    }\n  }\n\n  // Static\n\n  static _jQueryInterface(config) {\n    return this.each(function () {\n      let data = $(this).data(DATA_KEY)\n      const _config = typeof config === 'object' ? config : null\n\n      if (!data && /dispose|hide/.test(config)) {\n        return\n      }\n\n      if (!data) {\n        data = new Popover(this, _config)\n        $(this).data(DATA_KEY, data)\n      }\n\n      if (typeof config === 'string') {\n        if (typeof data[config] === 'undefined') {\n          throw new TypeError(`No method named \"${config}\"`)\n        }\n\n        data[config]()\n      }\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n */\n\n$.fn[NAME] = Popover._jQueryInterface\n$.fn[NAME].Constructor = Popover\n$.fn[NAME].noConflict = () => {\n  $.fn[NAME] = JQUERY_NO_CONFLICT\n  return Popover._jQueryInterface\n}\n\nexport default Popover\n","/**\n * --------------------------------------------------------------------------\n * Bootstrap (v4.6.0): scrollspy.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport $ from 'jquery'\nimport Util from './util'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'scrollspy'\nconst VERSION = '4.6.0'\nconst DATA_KEY = 'bs.scrollspy'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst JQUERY_NO_CONFLICT = $.fn[NAME]\n\nconst Default = {\n  offset: 10,\n  method: 'auto',\n  target: ''\n}\n\nconst DefaultType = {\n  offset: 'number',\n  method: 'string',\n  target: '(string|element)'\n}\n\nconst EVENT_ACTIVATE = `activate${EVENT_KEY}`\nconst EVENT_SCROLL = `scroll${EVENT_KEY}`\nconst EVEh(f,l=h(l,a=h(a,s,f,l,e[n+4],6,-145523070),s,f,e[n+11],10,-1120210379),a,s,e[n+2],15,718787259),l,a,e[n+9],21,-343485551),a=u(a,o),s=u(s,r),f=u(f,i),l=u(l,c);return[a,s,f,l]}function f(e){var t,n="",o=32*e.length;for(t=0;t<o;t+=8)n+=String.fromCharCode(e[t>>5]>>>t%32&255);return n}function l(e){var t,n=[];for(n[(e.length>>2)-1]=void 0,t=0;t<n.length;t+=1)n[t]=0;var o=8*e.length;for(t=0;t<o;t+=8)n[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return n}function o(e){var t,n,o="0123456789abcdef",r="";for(n=0;n<e.length;n+=1)t=e.charCodeAt(n),r+=o.charAt(t>>>4&15)+o.charAt(15&t);return r}function n(e){return unescape(encodeURIComponent(e))}function r(e){return f(s(l(t=n(e)),8*t.length));var t}function i(e,t){return function(e,t){var n,o,r=l(e),i=[],c=[];for(i[15]=c[15]=void 0,16<r.length&&(r=s(r,8*e.length)),n=0;n<16;n+=1)i[n]=909522486^r[n],c[n]=1549556828^r[n];return o=s(i.concat(l(t)),512+8*t.length),f(s(c.concat(o),640))}(n(e),n(t))}function t(e,t,n){return t?n?i(t,e):o(i(t,e)):n?r(e):o(r(e))}c.exports?c.exports=t:e.md5=t}(g)}(h={exports:{}},h.exports),h.exports);function v(e){if(null!==e&&"object"===t(e))return e.src?p(e.src):e.href?p(e.href):e.innerText&&""!==e.innerText?p(e.innerText):void 0}var y="fa-kits-diag",w="fa-kits-node-under-test",b="data-md5",x="data-fa-detection-ignore",A="data-fa-detection-timeout",T="data-fa-detection-results-collection-max-wait",D=function(e){e.preventDefault(),e.stopPropagation()};function E(e){var t=e.fn,c=void 0===t?function(){return!0}:t,n=e.initialDuration,o=void 0===n?1:n,r=e.maxDuration,a=void 0===r?l.FontAwesomeDetection.timeout:r,i=e.showProgress,s=void 0!==i&&i,f=e.progressIndicator;return new Promise(function(r,i){!function n(e,o){setTimeout(function(){var e=c();if(s&&console.info(f),e)r(e);else{var t=250+o;t<=a?n(250,t):i("timeout")}},e)}(o,0)})}function C(e){var t=e.nodesTested,n=e.nodesFound;l.FontAwesomeDetection=l.FontAwesomeDetection||{},l.FontAwesomeDetection.nodesTested=t,l.FontAwesomeDetection.nodesFound=n,l.FontAwesomeDetection.detectionDone=!0}function F(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},n={conflict:{},noConflict:{}};l.onmessage=function(e){"file://"!==l.location.origin&&e.origin!==l.location.origin||e&&e.data&&("fontawesome-conflict"===e.data.type?n.conflict[e.data.md5]=e.data:"no-conflict"===e.data.type&&(n.noConflict[e.data.md5]=e.data))};var e=function(t){for(var c=Array.from(u.scripts).filter(function(e){return!e.hasAttribute(x)&&e!==t}),a={},e=function(e){var t=u.createElement("iframe");t.setAttribute("style","display:none;");var n=u.createElement("script");n.setAttribute("id",w);var o=v(c[e]);n.setAttribute(b,o),a[o]=c[e],""!==c[e].src&&(n.src=c[e].src),""!==c[e].innerText&&(n.innerText=c[e].innerText),n.async=!0;var r=u.createElement("script");r.setAttribute("id",y);var i="file://"===l.location.origin?"*":l.location.origin;r.innerText="(".concat(function(n,o,r){parent.FontAwesomeDetection.__pollUntil({fn:function(){return!!window.FontAwesomeConfig||!!window.FontAwesomeKitConfig}}).then(function(){var e=document.getElementById(n);parent.postMessage({type:"fontawesome-conflict",technology:"js",src:e.src,innerText:e.innerText,tagName:e.tagName,md5:o},r)}).catch(function(e){var t=document.getElementById(n);"timeout"===e?parent.postMessage({type:"no-conflict",src:t.src,innerText:t.innerText,tagName:t.tagName,md5:o},r):console.error(e)})}.toString(),")('").concat(w,"', '").concat(o,"', '").concat(i,"');"),t.onload=function(){t.contentWindow.addEventListener("error",D,!0),t.contentDocument.head.appendChild(r),t.contentDocument.head.appendChild(n)},m(function(){return u.body.appendChild(t)})},n=0;n<c.length;n++)e(n);return a}(u.currentScript),o=function(){var e=Array.from(u.getElementsByTagName("link")).filter(function(e){return!e.hasAttribute(x)}),t=Array.from(u.getElementsByTagName("style")).filter(function(e){return!(e.hasAttribute(x)||l.FontAwesomeConfig&&e.innerText.match(new RegExp("svg:not\\(:root\\)\\.".concat(l.FontAwesomeConfig.replacementClass))))});function n(e,t){var n=u.createElement("iframe");n.setAttribute("style","visibility: hidden; position: absolute; height: 0; width: 0;");var o="fa-test-icon-"+t,r=u.createElement("i");r.setAttribute("class","fa fa-coffee"),r.setAttribute("id",o);var i=u.createElement("script");i.setAttribute("id",y);var c="file://"===l.location.origin?"*":l.location.origin;i.innerText="(".concat(function(n,o,r,i){parent.FontAwesomeDetection.__pollUntil({fn:function(){var e=document.getElementById(o),t=window.getComputedStyle(e).getPropertyValue("font-family");return!(!t.match(/FontAwesome/)&&!t.match(/Font Awesome 5/))}}).then(function(){var e=document.getElementById(n);parent.postMessage({type:"fontawesome-conflict",technology:"webfont",href:e.href,innerText:e.innerText,tagName:e.tagName,md5:r},i)}).catch(function(e){var t=document.getElementById(n);"timeout"===e?parent.postMessage({type:"no-conflict",technology:"webfont",href:t.src,innerText:t.innerText,tagName:t.tagName,md5:r},i):console.error(e)})}.toString(),")('").concat(w,"', '").concat(o||"foo","', '").concat(t,"', '").concat(c,"');"),n.onload=function(){n.contentWindow.addEventListener("error",D,!0),n.contentDocument.head.appendChild(i),n.contentDocument.head.appendChild(e),n.contentDocument.body.appendChild(r)},m(function(){return u.body.appendChild(n)})}for(var o={},r=0;r<e.length;r++){var i=u.createElement("link");i.setAttribute("id",w),i.setAttribute("href",e[r].href),i.setAttribute("rel",e[r].rel);var c=v(e[r]);i.setAttribute(b,c),o[c]=e[r],n(i,c)}for(var a=0;a<t.length;a++){var s=u.createElement("style");s.setAttribute("id",w);var f=v(t[a]);s.setAttribute(b,f),s.innerText=t[a].innerText,o[f]=t[a],n(s,f)}return o}(),r=a({},e,o),i=Object.keys(e).length+Object.keys(o).length,c=l.FontAwesomeDetection.timeout+l.FontAwesomeDetection.resultsCollectionMaxWait;console.group("Font Awesome Detector"),0===i?(console.info("%cAll Good!","color: green; font-size: large"),console.info("We didn't find anything that needs testing for conflicts. Ergo, no conflicts.")):(console.info("Testing ".concat(i," possible conflicts.")),console.info("We'll wait about ".concat(Math.round(l.FontAwesomeDetection.timeout/10)/100," seconds while testing these and\n")+"then up to another ".concat(Math.round(l.FontAwesomeDetection.resultsCollectionMaxWait/10)/100," to allow the browser time\n")+"to accumulate the results. But we'll probably be outta here way before then.\n\n"),console.info("You can adjust those durations by assigning values to these attributes on the <script> element that loads this detection:"),console.info("\t%c".concat(A,"%c: milliseconds to wait for each test before deciding whether it's a conflict."),"font-weight: bold;","font-size: normal;"),console.info("\t%c".concat(T,"%c: milliseconds to wait for the browser to accumulate test results before giving up."),"font-weight: bold;","font-size: normal;"),E({maxDuration:c,showProgress:!0,progressIndicator:"waiting...",fn:function(){return Object.keys(n.conflict).length+Object.keys(n.noConflict).length>=i}}).then(function(){console.info("DONE!"),C({nodesTested:n,nodesFound:r}),t({nodesTested:n,nodesFound:r}),console.groupEnd()}).catch(function(e){"timeout"===e?console.info("TIME OUT! We waited until we got tired. Here's what we found:"):(console.info("Whoops! We hit an error:",e),console.info("Here's what we'd found up until that error:")),C({nodesTested:n,nodesFound:r}),t({nodesTested:n,nodesFound:r}),console.groupEnd()}))}var O=l.FontAwesomeDetection||{},N=a({},{report:function(e){var t=e.nodesTested,n=e.nodesFound,o={};for(var r in n)t.conflict[r]||t.noConflict[r]||(o[r]=n[r]);var i=Object.keys(t.conflict).length;if(0<i){console.info("%cConflict".concat(1<i?"s":""," found:"),"color: darkred; font-size: large");var c={};for(var a in t.conflict){var s=t.conflict[a];c[a]={tagName:s.tagName,"src/href":s.src||s.href||"n/a","innerText excerpt":s.innerText&&""!==s.innerText?s.innerText.slice(0,200)+"...":"(empty)"}}console.table(c)}var f=Object.keys(t.noConflict).length;if(0<f){console.info("%cNo conflict".concat(1<f?"s":""," found with ").concat(1==f?"this":"these",":"),"color: green; font-size: large");var l={};for(var u in t.noConflict){var d=t.noConflict[u];l[u]={tagName:d.tagName,"src/href":d.src||d.href||"n/a","innerText excerpt":d.innerText&&""!==d.innerText?d.innerText.slice(0,200)+"...":"(empty)"}}console.table(l)}var m=Object.keys(o).length;if(0<m){console.info("%cLeftovers--we timed out before collecting test results for ".concat(1==m?"this":"these",":"),"color: blue; font-size: large");var g={};for(var h in o){var p=o[h];g[h]={tagName:p.tagName,"src/href":p.src||p.href||"n/a","innerText excerpt":p.innerText&&""!==p.innerText?p.innerText.slice(0,200)+"...":"(empty)"}}console.table(g)}},timeout:+(u.currentScript.getAttribute(A)||"2000"),resultsCollectionMaxWait:+(u.currentScript.getAttribute(T)||"5000")},O,{__pollUntil:E,md5ForNode:v,detectionDone:!1,nodesTested:null,nodesFound:null});l.FontAwesomeDetection=N;var j=function(){try{return"production"===process.env.NODE_ENV}catch(e){return!1}}();!function(e){try{e()}catch(e){if(!j)throw e}}(function(){c&&s&&F(window.FontAwesomeDetection.report)}),e.conflictDetection=F,Object.defineProperty(e,"__esModule",{value:!0})},"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t(e["fontawesome-free-conflict-detection"]={});